/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as ProtectedIndexImport } from './routes/_protected/index'
import { Route as ProtectedClientsIndexImport } from './routes/_protected/clients/index'
import { Route as ProtectedClientsClientIdIndexImport } from './routes/_protected/clients/$clientId/index'
import { Route as ProtectedClientsClientIdPagesPageIdIndexImport } from './routes/_protected/clients/$clientId/pages/$pageId/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedClientsIndexRoute = ProtectedClientsIndexImport.update({
  path: '/clients/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedClientsClientIdIndexRoute =
  ProtectedClientsClientIdIndexImport.update({
    path: '/clients/$clientId/',
    getParentRoute: () => ProtectedRoute,
  } as any)

const ProtectedClientsClientIdPagesPageIdIndexRoute =
  ProtectedClientsClientIdPagesPageIdIndexImport.update({
    path: '/clients/$clientId/pages/$pageId/',
    getParentRoute: () => ProtectedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/clients/': {
      id: '/_protected/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof ProtectedClientsIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/clients/$clientId/': {
      id: '/_protected/clients/$clientId/'
      path: '/clients/$clientId'
      fullPath: '/clients/$clientId'
      preLoaderRoute: typeof ProtectedClientsClientIdIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/clients/$clientId/pages/$pageId/': {
      id: '/_protected/clients/$clientId/pages/$pageId/'
      path: '/clients/$clientId/pages/$pageId'
      fullPath: '/clients/$clientId/pages/$pageId'
      preLoaderRoute: typeof ProtectedClientsClientIdPagesPageIdIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedClientsIndexRoute: typeof ProtectedClientsIndexRoute
  ProtectedClientsClientIdIndexRoute: typeof ProtectedClientsClientIdIndexRoute
  ProtectedClientsClientIdPagesPageIdIndexRoute: typeof ProtectedClientsClientIdPagesPageIdIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedClientsIndexRoute: ProtectedClientsIndexRoute,
  ProtectedClientsClientIdIndexRoute: ProtectedClientsClientIdIndexRoute,
  ProtectedClientsClientIdPagesPageIdIndexRoute:
    ProtectedClientsClientIdPagesPageIdIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRouteWithChildren
  '/login': typeof LoginRoute
  '/': typeof ProtectedIndexRoute
  '/clients': typeof ProtectedClientsIndexRoute
  '/clients/$clientId': typeof ProtectedClientsClientIdIndexRoute
  '/clients/$clientId/pages/$pageId': typeof ProtectedClientsClientIdPagesPageIdIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/': typeof ProtectedIndexRoute
  '/clients': typeof ProtectedClientsIndexRoute
  '/clients/$clientId': typeof ProtectedClientsClientIdIndexRoute
  '/clients/$clientId/pages/$pageId': typeof ProtectedClientsClientIdPagesPageIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/login': typeof LoginRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_protected/clients/': typeof ProtectedClientsIndexRoute
  '/_protected/clients/$clientId/': typeof ProtectedClientsClientIdIndexRoute
  '/_protected/clients/$clientId/pages/$pageId/': typeof ProtectedClientsClientIdPagesPageIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/'
    | '/clients'
    | '/clients/$clientId'
    | '/clients/$clientId/pages/$pageId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/'
    | '/clients'
    | '/clients/$clientId'
    | '/clients/$clientId/pages/$pageId'
  id:
    | '__root__'
    | '/_protected'
    | '/login'
    | '/_protected/'
    | '/_protected/clients/'
    | '/_protected/clients/$clientId/'
    | '/_protected/clients/$clientId/pages/$pageId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/login"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/",
        "/_protected/clients/",
        "/_protected/clients/$clientId/",
        "/_protected/clients/$clientId/pages/$pageId/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/clients/": {
      "filePath": "_protected/clients/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/clients/$clientId/": {
      "filePath": "_protected/clients/$clientId/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/clients/$clientId/pages/$pageId/": {
      "filePath": "_protected/clients/$clientId/pages/$pageId/index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
