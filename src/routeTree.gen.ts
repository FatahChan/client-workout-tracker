/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutClientsIndexImport } from './routes/_layout/clients/index'
import { Route as LayoutClientsClientIdIndexImport } from './routes/_layout/clients/$clientId/index'
import { Route as LayoutClientsClientIdPagesPageIdIndexImport } from './routes/_layout/clients/$clientId/pages/$pageId/index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutClientsIndexRoute = LayoutClientsIndexImport.update({
  path: '/clients/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutClientsClientIdIndexRoute = LayoutClientsClientIdIndexImport.update(
  {
    path: '/clients/$clientId/',
    getParentRoute: () => LayoutRoute,
  } as any,
)

const LayoutClientsClientIdPagesPageIdIndexRoute =
  LayoutClientsClientIdPagesPageIdIndexImport.update({
    path: '/clients/$clientId/pages/$pageId/',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout/clients/': {
      id: '/_layout/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof LayoutClientsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/clients/$clientId/': {
      id: '/_layout/clients/$clientId/'
      path: '/clients/$clientId'
      fullPath: '/clients/$clientId'
      preLoaderRoute: typeof LayoutClientsClientIdIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/clients/$clientId/pages/$pageId/': {
      id: '/_layout/clients/$clientId/pages/$pageId/'
      path: '/clients/$clientId/pages/$pageId'
      fullPath: '/clients/$clientId/pages/$pageId'
      preLoaderRoute: typeof LayoutClientsClientIdPagesPageIdIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutClientsIndexRoute: typeof LayoutClientsIndexRoute
  LayoutClientsClientIdIndexRoute: typeof LayoutClientsClientIdIndexRoute
  LayoutClientsClientIdPagesPageIdIndexRoute: typeof LayoutClientsClientIdPagesPageIdIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutClientsIndexRoute: LayoutClientsIndexRoute,
  LayoutClientsClientIdIndexRoute: LayoutClientsClientIdIndexRoute,
  LayoutClientsClientIdPagesPageIdIndexRoute:
    LayoutClientsClientIdPagesPageIdIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/login': typeof LoginIndexRoute
  '/clients': typeof LayoutClientsIndexRoute
  '/clients/$clientId': typeof LayoutClientsClientIdIndexRoute
  '/clients/$clientId/pages/$pageId': typeof LayoutClientsClientIdPagesPageIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/login': typeof LoginIndexRoute
  '/clients': typeof LayoutClientsIndexRoute
  '/clients/$clientId': typeof LayoutClientsClientIdIndexRoute
  '/clients/$clientId/pages/$pageId': typeof LayoutClientsClientIdPagesPageIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/login/': typeof LoginIndexRoute
  '/_layout/clients/': typeof LayoutClientsIndexRoute
  '/_layout/clients/$clientId/': typeof LayoutClientsClientIdIndexRoute
  '/_layout/clients/$clientId/pages/$pageId/': typeof LayoutClientsClientIdPagesPageIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/login'
    | '/clients'
    | '/clients/$clientId'
    | '/clients/$clientId/pages/$pageId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/clients'
    | '/clients/$clientId'
    | '/clients/$clientId/pages/$pageId'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/'
    | '/login/'
    | '/_layout/clients/'
    | '/_layout/clients/$clientId/'
    | '/_layout/clients/$clientId/pages/$pageId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/clients/",
        "/_layout/clients/$clientId/",
        "/_layout/clients/$clientId/pages/$pageId/"
      ]
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/_layout/clients/": {
      "filePath": "_layout/clients/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/clients/$clientId/": {
      "filePath": "_layout/clients/$clientId/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/clients/$clientId/pages/$pageId/": {
      "filePath": "_layout/clients/$clientId/pages/$pageId/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
